{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","newContact","handleChange","e","target","value","setState","handleSubmit","preventDefault","cbAddNewContact","props","id","shortid","this","className","styles","form","onSubmit","type","pattern","title","required","onChange","placeholder","Component","Styles","styled","div","ContactList","contacts","filteringName","cbRemoveContact","map","toLowerCase","indexOf","style","textTransform","onClick","Filter","cbInputChange","filter","App","addNewContact","contact","includes","alert","prevState","removeContact","splice","findIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,4B,mBCAzBD,EAAOC,QAAU,CAAC,OAAS,yB,oNCGrBC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,GACRC,WAAY,M,EAGdC,aAAe,SAACC,GACd,MAAwBA,EAAEC,OAAlBL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BE,aAAe,SAACJ,GACdA,EAAEK,iBACF,MAAyB,EAAKV,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACNS,EAAoB,EAAKC,MAAzBD,gBACFR,EAAa,CACjBF,OACAC,SACAW,GAAIC,OAEN,EAAKN,SAAS,CAAEP,KAAM,GAAIC,OAAQ,GAAIC,eACtCQ,EAAgBR,I,4CAGlB,WACE,MAAyBY,KAAKf,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMc,UAAWC,IAAOC,KAAMC,SAAUJ,KAAKN,aAA7C,UACE,kCACE,qCACA,uBACEO,UAAU,QACVI,KAAK,OACLnB,KAAK,OACLM,MAAON,EACPoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUT,KAAKX,aACfqB,YAAY,8BAGhB,kCACE,uCACA,uBACET,UAAU,QACVI,KAAK,MACLnB,KAAK,SACLM,MAAOL,EACPmB,QAAQ,yFACRC,MAAM,6iBACNC,UAAQ,EACRC,SAAUT,KAAKX,aACfqB,YAAY,gCAGhB,wBAAQT,UAAU,SAASI,KAAK,SAAhC,gC,GAzDkBM,aAiEX3B,I,QCjET4B,E,MAASC,EAAOC,IAAV,mXA0EGC,MA3Cf,YAAoE,IAA7CC,EAA4C,EAA5CA,SAAUC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,gBAC9C,OACE,cAACN,EAAD,UACE,wBAAOX,UAAU,YAAjB,UACE,uBAAOA,UAAU,YAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,kBACA,oBAAIA,UAAU,YAAd,0BACA,oBAAIA,UAAU,YAAd,uBAGJ,gCACGe,EAASG,KACR,gBAAGrB,EAAH,EAAGA,GAAIZ,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OAEK,IADHD,EAAKkC,cAAcC,QAAQJ,EAAcG,gBAEvC,+BACE,oBACEnB,UAAU,YACVqB,MAAO,CAAEC,cAAe,cAF1B,SAIGrC,IAEH,oBAAIe,UAAU,YAAd,SAA2Bd,IAC3B,oBAAIc,UAAU,YAAd,SACE,wBACEA,UAAU,SACVI,KAAK,SACLmB,QAASN,EACTpB,GAAIA,EAJN,gCATKA,c,iBC1BV2B,MAhBf,YAAmD,IAAjCR,EAAgC,EAAhCA,cAAeS,EAAiB,EAAjBA,cAC/B,OACE,wBAAOzB,UAAWC,IAAOyB,OAAzB,UACE,mBAAG1B,UAAU,QAAb,mCACA,uBACEA,UAAU,QACVI,KAAK,OACLnB,KAAK,SACLM,MAAOyB,EACPR,SAAUiB,EACVhB,YAAY,yBCXdkB,G,kNACJ3C,MAAQ,CACN+B,SAAU,CACR,CAAElB,GAAI,OAAQZ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEW,GAAI,OAAQZ,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEW,GAAI,OAAQZ,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEW,GAAI,OAAQZ,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEW,GAAI,OAAQZ,KAAM,aAAcC,OAAQ,eAC1C,CAAEW,GAAI,OAAQZ,KAAM,eAAgBC,OAAQ,eAE9CwC,OAAQ,I,EAGVtC,aAAe,SAACC,GACd,MAAwBA,EAAEC,OAAlBL,EAAR,EAAQA,KAAMM,EAAd,EAAcA,MACd,EAAKC,SAAL,eAAiBP,EAAOM,K,EAG1BqC,cAAgB,SAACzC,GACM,EAAKH,MAAlB+B,SACuBG,KAAI,SAACW,GAAD,OAAaA,EAAQ5C,KAAKkC,iBAC/CW,SAAS3C,EAAWF,KAAKkC,eACnCY,MAAM,GAAD,OAAI5C,EAAWF,KAAf,4BACL,EAAKO,UAAS,SAACwC,GAAD,MAAgB,CAC5BjB,SAAS,GAAD,mBAAMiB,EAAUjB,UAAhB,CAA0B5B,S,EAI1C8C,cAAgB,SAAC5C,GACf,IAAQ0B,EAAa,EAAK/B,MAAlB+B,SACRA,EAASmB,OACPnB,EAASoB,WAAU,SAACN,GAAD,OAAaA,EAAQhC,KAAOR,EAAEC,OAAOO,MACxD,GAEF,EAAKL,SAAS,CAAEuB,c,4CAGlB,WACE,MAA6BhB,KAAKf,MAA1B+B,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,OAClB,OACE,sBAAK1B,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAaL,gBAAiBI,KAAK6B,gBACnC,0CACA,cAAC,EAAD,CAAQZ,cAAeU,EAAQD,cAAe1B,KAAKX,eACnD,cAAC,EAAD,CACE2B,SAAUA,EACVC,cAAeU,EACfT,gBAAiBlB,KAAKkC,uB,GAhDdvB,cAuDHiB,IC1DfS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3bd6a851.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3bJyg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__LO2sI\"};","import React, { Component } from \"react\";\nimport shortid from \"shortid\";\nimport styles from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n    newContact: null,\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { cbAddNewContact } = this.props;\n    const newContact = {\n      name,\n      number,\n      id: shortid(),\n    };\n    this.setState({ name: \"\", number: \"\", newContact });\n    cbAddNewContact(newContact);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label>\n          <p>Name</p>\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            placeholder=\"Enter new contact name\"\n          />\n        </label>\n        <label>\n          <p>Number</p>\n          <input\n            className=\"input\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            placeholder=\"Enter new contact number\"\n          />\n        </label>\n        <button className=\"button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .selector1 {\n    width: 100%;\n    border-collapse: collapse;\n    margin: 20px auto;\n    box-shadow: lightgrey 1px 4px;\n  }\n  .selector2 {\n    background-color: rgb(63, 207, 243);\n    text-transform: uppercase;\n    color: #fff;\n  }\n  .selector3 {\n    line-height: 2;\n    border: 1px solid #a3a1a1;\n    text-align: center;\n  }\n`;\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  filteringName: PropTypes.string,\n  cbRemoveContact: PropTypes.func.isRequired,\n};\n\nfunction ContactList({ contacts, filteringName, cbRemoveContact }) {\n  return (\n    <Styles>\n      <table className=\"selector1\">\n        <thead className=\"selector2\">\n          <tr>\n            <th className=\"selector3\">Name</th>\n            <th className=\"selector3\">Phone Number</th>\n            <th className=\"selector3\">Etc.</th>\n          </tr>\n        </thead>\n        <tbody>\n          {contacts.map(\n            ({ id, name, number }) =>\n              name.toLowerCase().indexOf(filteringName.toLowerCase()) !==\n                -1 && (\n                <tr key={id}>\n                  <td\n                    className=\"selector3\"\n                    style={{ textTransform: \"capitalize\" }}\n                  >\n                    {name}\n                  </td>\n                  <td className=\"selector3\">{number}</td>\n                  <td className=\"selector3\">\n                    <button\n                      className=\"button\"\n                      type=\"button\"\n                      onClick={cbRemoveContact}\n                      id={id}\n                    >\n                      Delete contact\n                    </button>\n                  </td>\n                </tr>\n              )\n          )}\n        </tbody>\n      </table>\n    </Styles>\n  );\n}\n\nexport default ContactList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\n\nFilter.propTypes = {\n  filteringName: PropTypes.string,\n  cbInputChange: PropTypes.func.isRequired,\n};\n\nfunction Filter({ filteringName, cbInputChange }) {\n  return (\n    <label className={styles.filter}>\n      <p className=\"label\">Find contacts by name</p>\n      <input\n        className=\"input\"\n        type=\"text\"\n        name=\"filter\"\n        value={filteringName}\n        onChange={cbInputChange}\n        placeholder=\"Enter query name\"\n      />\n    </label>\n  );\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\n\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n      { id: \"id-5\", name: \"Will Smith\", number: \"911-911-911\" },\n      { id: \"id-6\", name: \"Alice Cooper\", number: \"666-99-333\" },\n    ],\n    filter: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  addNewContact = (newContact) => {\n    const { contacts } = this.state;\n    const contactsNames = contacts.map((contact) => contact.name.toLowerCase());\n    contactsNames.includes(newContact.name.toLowerCase())\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState((prevState) => ({\n          contacts: [...prevState.contacts, newContact],\n        }));\n  };\n\n  removeContact = (e) => {\n    const { contacts } = this.state;\n    contacts.splice(\n      contacts.findIndex((contact) => contact.id === e.target.id),\n      1\n    );\n    this.setState({ contacts });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm cbAddNewContact={this.addNewContact} />\n        <h2>Contacts</h2>\n        <Filter filteringName={filter} cbInputChange={this.handleChange} />\n        <ContactList\n          contacts={contacts}\n          filteringName={filter}\n          cbRemoveContact={this.removeContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}