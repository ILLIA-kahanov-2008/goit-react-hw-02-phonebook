{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","target","value","setState","handleSubmit","preventDefault","cbAddNewContact","props","newContact","id","shortid","this","className","styles","form","onSubmit","type","pattern","title","required","onChange","placeholder","Component","Styles","styled","div","ContactList","handleClick","cbRemoveContact","filteredContacts","map","style","textTransform","onClick","Filter","filteringName","cbInputChange","filter","App","contacts","addNewContact","some","contact","toLowerCase","alert","prevState","removeContact","prev","getFilteredContacts","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.379995c6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3bJyg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__LO2sI\"};","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport shortid from \"shortid\";\nimport styles from \"./ContactForm.module.css\";\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { cbAddNewContact } = this.props;\n    const newContact = {\n      name,\n      number,\n      id: shortid(),\n    };\n    this.setState({ name: \"\", number: \"\" });\n    cbAddNewContact(newContact);\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className={styles.form} onSubmit={this.handleSubmit}>\n        <label>\n          <p>Name</p>\n          <input\n            className=\"input\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            placeholder=\"Enter new contact name\"\n          />\n        </label>\n        <label>\n          <p>Number</p>\n          <input\n            className=\"input\"\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            placeholder=\"Enter new contact number\"\n          />\n        </label>\n        <button className=\"button\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n\nContactForm.propTypes = {\n  cbAddNewContact: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n  .selector1 {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    margin: 20px auto;\r\n    box-shadow: lightgrey 1px 4px;\r\n  }\r\n  .selector2 {\r\n    background-color: rgb(63, 207, 243);\r\n    text-transform: uppercase;\r\n    color: #fff;\r\n  }\r\n  .selector3 {\r\n    line-height: 2;\r\n    border: 1px solid #a3a1a1;\r\n    text-align: center;\r\n  }\r\n`;\r\nclass ContactList extends Component {\r\n  handleClick = (e) => {\r\n    this.props.cbRemoveContact(e.target.id);\r\n  };\r\n  render() {\r\n    const { filteredContacts } = this.props;\r\n    const { handleClick } = this;\r\n    return (\r\n      <Styles>\r\n        <table className=\"selector1\">\r\n          <thead className=\"selector2\">\r\n            <tr>\r\n              <th className=\"selector3\">Name</th>\r\n              <th className=\"selector3\">Phone Number</th>\r\n              <th className=\"selector3\">Etc.</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredContacts.map(({ id, name, number }) => (\r\n              <tr key={id}>\r\n                <td\r\n                  className=\"selector3\"\r\n                  style={{ textTransform: \"capitalize\" }}\r\n                >\r\n                  {name}\r\n                </td>\r\n                <td className=\"selector3\">{number}</td>\r\n                <td className=\"selector3\">\r\n                  <button\r\n                    className=\"button\"\r\n                    type=\"button\"\r\n                    onClick={handleClick}\r\n                    id={id}\r\n                  >\r\n                    Delete contact\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Styles>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  cbRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nFilter.propTypes = {\r\n  filteringName: PropTypes.string,\r\n  cbInputChange: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction Filter({ filteringName, cbInputChange }) {\r\n  return (\r\n    <label className={styles.filter}>\r\n      <p className=\"label\">Find contacts by name</p>\r\n      <input\r\n        className=\"input\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filteringName}\r\n        onChange={cbInputChange}\r\n        placeholder=\"Enter query name\"\r\n      />\r\n    </label>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\n\r\nimport ContactForm from \"../ContactForm/ContactForm\";\r\nimport ContactList from \"../ContactList/ContactList\";\r\nimport Filter from \"../Filter/Filter\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n      { id: \"id-5\", name: \"Will Smith\", number: \"911-911-911\" },\r\n      { id: \"id-6\", name: \"Alice Cooper\", number: \"666-99-333\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  addNewContact = (newContact) => {\r\n    const { contacts } = this.state;\r\n    const isExists = contacts.some(\r\n      (contact) => contact.name.toLowerCase() === newContact.name.toLowerCase()\r\n    );\r\n    isExists\r\n      ? alert(`${newContact.name} is already in contacts`)\r\n      : this.setState((prevState) => ({\r\n          contacts: [...prevState.contacts, newContact],\r\n        }));\r\n  };\r\n\r\n  removeContact = (id) => {\r\n    this.setState((prev) => ({\r\n      contacts: prev.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Phonebook</h1>\r\n        <ContactForm cbAddNewContact={this.addNewContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter filteringName={filter} cbInputChange={this.handleChange} />\r\n        <ContactList\r\n          filteredContacts={filteredContacts}\r\n          cbRemoveContact={this.removeContact}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App.jsx\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}